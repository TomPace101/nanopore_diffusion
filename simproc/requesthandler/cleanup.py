"For cleaning up the output files generated by other requests"

#Standard library
from __future__ import print_function, division #Python 2 compatibility

#Site packages

#This package
from . import request
from . import yaml_manager

_OutputCleanupRequest_props_schema_yaml="""#OutputCleanupRequest
name: {type: string}
clean:
  type: array"""

class OutputCleanupRequest(request.Request):
  """Request to run all the requests in a given file
  
  User-Provided Attributes:
  
    - clean: a sequence of requests, whose output files are to be cleaned
    
  Calculated Attributes:
  
    - pathlist: list of files to be deleted"""
  __slots__=('clean','pathlist')
  _props_schema=yaml_manager.read(_OutputCleanupRequest_props_schema_yaml)
  _required_attrs=['clean']
  _self_task=True
  def __init__(self,**kwargs):
    #Initialization from base class
    super(OutputCleanupRequest, self).__init__(**kwargs)
    ##TEMP
    self.pathlist=[]
  def run(self):
    """Delete all the output files that exist, and remove empty directories"""
    for fpath in self.pathlist:
      print(fpath)

#Register for loading from yaml
yaml_manager.register_classes([OutputCleanupRequest])
