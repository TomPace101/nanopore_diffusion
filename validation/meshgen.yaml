%YAML 1.2
---
#Locator for input and output generated below
- !UpdateFolderStructure
  InputFile: ['input',0]
  OutputFile: ['output',0]
  CompareFile: ['comparison',0]
#Test a simple mesh template
- !TemplateFileRequest
  name: mesh.template
  tmplfile: !InputFile simple_mesh.geo.jinja2
  outfile: !OutputFile simple_mesh.geo
  data:
    mscale: 5.0
    mcarl: 0.1
    mcarh: 0.1
    Lx: 1.0
    Ly: 1.0
    alpha: 0.5
#Verify output of previous test
- !FileComparisonRequest
  name: mesh.template.verify
  expected: !InputFile simple_mesh.geo
  received: !OutputFile simple_mesh.geo
#Test gmsh_runner
- !GmshRequest
  name: mesh.gmsh
  geofile: !InputFile simple_mesh.geo
  mshfile: !OutputFile simple_mesh.msh
  gmsh_outfile: !OutputFile simple_mesh.gmsh.txt
  meshmetafile: !OutputFile simple_mesh.yaml
#Verify output of previous test
- !FileComparisonRequest
  name: mesh.gmsh.verify.msh
  expected: !InputFile simple_mesh.msh
  received: !OutputFile simple_mesh.msh
- !FileComparisonRequest
  name: mesh.gmsh.verify.meta
  expected: !CompareFile simple_mesh.yaml
  received: !OutputFile simple_mesh.yaml
- !FileSizeComparisonRequest
  name: mesh.gmsh.verify.txt
  expected: !CompareFile simple_mesh.gmsh.txt
  received: !OutputFile simple_mesh.gmsh.txt
  range: [0, 1e4] #I suppose it is possible that someone has a very deeply nested validation path that would cause the upper end to be inadequate
#Test dconv_runner
- !DolfinConvertRequest
  name: mesh.dconv
  mshfile: !InputFile simple_mesh.msh
  mesh_xml: !OutputFile simple_mesh.xml
  dconv_outfile: !OutputFile simple_mesh.dconv.txt
#Verify output of previous test
- !FileComparisonListRequest
  name: mesh.dconv.verify
  pairs:
    - [!InputFile simple_mesh.xml, !OutputFile simple_mesh.xml]
    - [!InputFile simple_mesh_facet_region.xml, !OutputFile simple_mesh_facet_region.xml]
    - [!InputFile simple_mesh_physical_region.xml, !OutputFile simple_mesh_physical_region.xml]
    - [!CompareFile simple_mesh.dconv.txt, !OutputFile simple_mesh.dconv.txt]
#Test hdf5 conversion
- !HDF5ConvertRequest
  name: mesh.hdf5conv
  mesh_xml: !InputFile simple_mesh.xml
  mesh_hdf5file: !OutputFile simple_mesh.hdf5
#Verify output of previous test
#We don't check the output file in this case.
#It's a purely binary file, and can differ even for the same input (!)
# - !FileComparisonRequest
#   name: mesh.hdf5conv.verify
#   expected: !CompareFile simple_mesh.hdf5
#   received: !OutputFile simple_mesh.hdf5
#
#Locator reassignment for the next test
- !UpdateFolderStructure
  geofile: ['input', 0]
  mshfile: ['output', 0, 1]
  gmsh_outfile: ['output', 0, 1, 'gmsh_out']
  meshmetafile: ['output', 0, 1]
  mesh_xml: ['output', 0, 1]
  facet_xml: ['output', 0, 1]
  cell_xml: ['output', 0, 1]
  dconv_outfile: ['output', 0, 1, 'dconv_out']
  mesh_hdf5file: ['output', 0, 1]
#Test single-request for conversion from geo to hdf5
- !GeoToHDF5Request
  name: mesh.onestep
  mesh_stem: simple_mesh
