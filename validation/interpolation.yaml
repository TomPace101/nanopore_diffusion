%YAML 1.2
---
#First, set the data folder so we know where to find input and output files
- !SetDataFolder
  datafolder: . #Data folder path relative to the location of this yaml file, unless absolute path provided
#Locator for input and output generated below
- !UpdateFolderStructure
  InputFile: ['input',0]
  OutputFile: ['output',0]
  CompareFile: ['comparison',0]
#Mesh Generation
- !TemplateFileRequest
  name: interpolation.geo
  tmplfile: !InputFile box.geo.jinja2
  outfile: !OutputFile box.geo
  data:
    mcar1: 0.1
    xmin: 0.0
    xmax: 1.0
    ymin: 0.0
    ymax: 1.0
    zmin: 0.0
    zmax: 1.0
- !GmshRequest
  name: interpolation.gmsh
  geofile: !OutputFile box.geo
  mshfile: !OutputFile box.msh
  gmsh_outfile: !OutputFile box.gmsh.txt
  meshmetafile: !OutputFile box.gmsh.yaml
- !DolfinConvertRequest
  name: interpolation.dconv
  mshfile: !OutputFile box.msh
  mesh_xml: !OutputFile box.xml
  dconv_outfile: !OutputFile box.dconv.txt
- !HDF5ConvertRequest
  name: interpolation.hdf5conv
  mesh_xml: !OutputFile box.xml
  mesh_hdf5file: !OutputFile box.hdf5
#Do the interpolation
- !InterpolationSimulator
  name: interpolation.spatial_func
  mesh: !OutputFile box.hdf5
  meshmeta: !OutputFile box.gmsh.yaml
  conditions:
    elementorder: 1
    functionname: f
    boundaryvalue: null
  loaddata:
    - [load_csv, {infpath: !InputFile example_points.csv, attrpath: pointdata}]
  dataextraction:
    - [compute_residual_errors, {dfpath: pointdata, funcattr: soln, outattr: residuals}]
    - [save_csv, {attrpath: residuals, outfpath: !OutputFile residuals.csv}]
    - [writefield, {outfpath: !OutputFile function.hdf5, outname: function}]
    - [writefield, {outfpath: !OutputFile function.pvd}]
    - - reportvalues
      - outfpath: !OutputFile timing.yaml
        mapping:
          total_sim_time: sim_timer.delta_str
          setup_time: interp_setup_timer.delta_str
          run_time: interp_run_timer.delta_str
